<!DOCTYPE html>
<html lang="fa" dir="rtl">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>اعلان‌ها | سامانه دولتی</title>
    <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&display=swap');

        body {
            font-family: 'Montserrat', sans-serif;
            overflow-x: hidden;
            background: linear-gradient(135deg, #0f172a, #1e293b);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            padding-top: 6rem;
            position: relative;
            color: #f1f5f9;
        }

        /* Floating circles */
        .circle {
            position: absolute;
            border-radius: 50%;
            background: rgba(250, 204, 21, 0.15);
            animation: float 12s infinite;
            z-index: 0;
        }

        .circle:nth-child(1) {
            width: 120px;
            height: 120px;
            top: 10%;
            left: 10%;
            animation-duration: 12s;
        }

        .circle:nth-child(2) {
            width: 200px;
            height: 200px;
            bottom: 15%;
            right: 15%;
            animation-duration: 18s;
        }

        .circle:nth-child(3) {
            width: 80px;
            height: 80px;
            bottom: 10%;
            left: 20%;
            animation-duration: 15s;
        }

        @keyframes float {
            0% {
                transform: translateY(0) translateX(0);
            }

            50% {
                transform: translateY(-40px) translateX(20px);
            }

            100% {
                transform: translateY(0) translateX(0);
            }
        }

        .card {
            backdrop-filter: blur(10px);
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 2rem;
            padding: 2rem;
            max-width: 800px;
            width: 90%;
            position: relative;
            z-index: 1;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
            margin: 0 auto;
        }

        .fade-in {
            animation: fadeIn 0.6s ease forwards;
        }

        @keyframes fadeIn {
            0% {
                opacity: 0;
                transform: translateY(-15px);
            }

            100% {
                opacity: 1;
                transform: translateY(0);
            }
        }

        header {
            text-align: center;
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 1.5rem;
            position: relative;
        }

        #notificationBadge {
            position: absolute;
            top: -10px;
            left: -10px;
            background: #facc15;
            color: #1e293b;
            font-weight: bold;
            padding: 6px 14px;
            border-radius: 50px;
            min-width: 24px;
            text-align: center;
        }

        ul.notifications {
            list-style: none;
            padding: 0;
            margin-top: 20px;
        }

        ul.notifications li {
            background: rgba(255, 255, 255, 0.05);
            margin-bottom: 16px;
            padding: 20px;
            border-radius: 1.5rem;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: grab;
            opacity: 0;
            transform: translateY(20px);
            animation: slideIn 0.4s forwards;
        }

        ul.notifications li.unread {
            border-right: 5px solid #facc15;
            background: rgba(250, 204, 21, 0.2);
            font-weight: bold;
        }

        ul.notifications li:hover {
            transform: scale(1.02);
            box-shadow: 0 12px 26px rgba(250, 204, 21, 0.4);
        }

        .priority {
            display: inline-block;
            padding: 4px 10px;
            border-radius: 8px;
            font-size: 13px;
            margin-left: 8px;
            font-weight: 600;
            color: #fff;
        }

        .info {
            background: #3b82f6;
        }

        .success {
            background: #16a34a;
        }

        .warning {
            background: #f59e0b;
            color: #000;
        }

        .error {
            background: #dc2626;
        }

        .actions button {
            margin-left: 8px;
            padding: 8px 16px;
            font-size: 14px;
            font-weight: 600;
            border-radius: 12px;
            border: none;
            cursor: pointer;
            transition: 0.2s;
            position: relative;
            overflow: hidden;
        }

        .actions button::after {
            content: '';
            position: absolute;
            left: 50%;
            top: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.3);
            transform: translate(-50%, -50%);
            border-radius: 50%;
            transition: width 0.3s, height 0.3s;
        }

        .actions button:active::after {
            width: 120%;
            height: 400%;
        }

        .mark-read-btn {
            background: #16a34a;
            color: white;
        }

        .mark-read-btn:hover {
            background: #15803d;
        }

        .archive-btn {
            background: #6b7280;
            color: white;
        }

        .archive-btn:hover {
            background: #4b5563;
        }

        .important-btn {
            background: #facc15;
            color: white;
        }

        .important-btn:hover {
            background: #eab308;
        }

        #toastContainer {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 9999;
        }

        .toast {
            background: #1e3a8a;
            color: white;
            padding: 14px 24px;
            border-radius: 12px;
            margin-top: 10px;
            min-width: 200px;
            box-shadow: 0 6px 18px rgba(0, 0, 0, 0.22);
            opacity: 0;
            transform: translateY(50px);
            animation: fadeInUp 0.5s forwards;
        }

        .toast.important {
            background: #dc2626;
        }

        @keyframes slideIn {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @media(max-width:650px) {
            .actions {
                flex-direction: column;
                gap: 8px;
                margin-top: 10px;
            }
        }
    </style>
</head>
<%- include('layouts/header') %>

    <body>
        <div class="circle"></div>
        <div class="circle"></div>
        <div class="circle"></div>

        <div class="card">
            <header>
                اعلان‌ها
                <span id="notificationBadge">2</span>
            </header>

            <ul class="notifications" id="notificationsList">
                <li class="unread" data-id="1">
                    <span><span class="priority info">info</span> اعلان مهم شماره ۱ - <small>2025-10-12
                            14:00</small></span>
                    <div class="actions">
                        <button class="mark-read-btn">خواندن</button>
                        <button class="archive-btn">آرشیو</button>
                        <button class="important-btn">⭐</button>
                    </div>
                </li>
                <li data-id="2">
                    <span><span class="priority success">success</span> اعلان شماره ۲ - <small>2025-10-12
                            13:30</small></span>
                    <div class="actions">
                        <button class="mark-read-btn">خواندن</button>
                        <button class="archive-btn">آرشیو</button>
                        <button class="important-btn">⭐</button>
                    </div>
                </li>
            </ul>
        </div>

        <div id="toastContainer"></div>

        <script>
            const notificationsList = document.getElementById('notificationsList');
            const badge = document.getElementById('notificationBadge');
            let unreadCount = document.querySelectorAll('li.unread').length;
            badge.textContent = unreadCount;

            // Toast example function
            function showToast(message, isImportant = false) {
                const toast = document.createElement('div');
                toast.className = 'toast' + (isImportant ? ' important' : '');
                toast.textContent = message;
                document.getElementById('toastContainer').appendChild(toast);
                setTimeout(() => toast.remove(), 4000);
            }

            // Button actions
            function updateBadge() { badge.textContent = document.querySelectorAll('li.unread').length; }
            document.querySelectorAll('.mark-read-btn').forEach(btn => {
                btn.onclick = () => {
                    btn.closest('li').classList.remove('unread'); updateBadge();
                    showToast("اعلان خوانده شد");
                }
            });
            document.querySelectorAll('.archive-btn').forEach(btn => {
                btn.onclick = () => { btn.closest('li').remove(); updateBadge(); }
            });
            document.querySelectorAll('.important-btn').forEach(btn => {
                btn.onclick = () => { btn.closest('li').querySelector('span span:nth-child(2)').classList.toggle('important'); }
            });

            // Drag & Drop
            let dragSrcEl = null;
            function handleDragStart(e) { dragSrcEl = this; this.style.opacity = '0.4'; }
            function handleDragEnd(e) { this.style.opacity = '1'; }
            function handleDragOver(e) { e.preventDefault(); }
            function handleDrop(e) { e.stopPropagation(); if (dragSrcEl !== this) { const parent = dragSrcEl.parentNode; let nodes = Array.from(parent.children); let srcIndex = nodes.indexOf(dragSrcEl); let destIndex = nodes.indexOf(this); if (srcIndex < destIndex) parent.insertBefore(dragSrcEl, this.nextSibling); else parent.insertBefore(dragSrcEl, this); } }
            function addDragAndDrop(el) { el.setAttribute('draggable', true); el.addEventListener('dragstart', handleDragStart); el.addEventListener('dragend', handleDragEnd); el.addEventListener('dragover', handleDragOver); el.addEventListener('drop', handleDrop); }
            notificationsList.querySelectorAll('li').forEach(addDragAndDrop);

        </script>
        <%- include('layouts/footer') %>

    </body>

</html>